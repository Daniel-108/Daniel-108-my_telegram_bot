import asyncio
import logging
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from shared.config import TELEGRAM_BOT_TOKEN

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = TELEGRAM_BOT_TOKEN
if not TOKEN:
    raise ValueError("TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å .env —Ñ–∞–π–ª")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")],
        [KeyboardButton(text="–ö—É–ø–∏—Ç—å –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫üéÅ")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
buy_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ –º–∞—Å—Å—É üí™")],
        [KeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∏—Ç–∞–Ω–∏—èü•¨")],
        [KeyboardButton(text="–ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ —Ä–µ–ª—å–µ—Ñ üî•")],
        [KeyboardButton(text="–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥ üèÉ")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–∞–π—Å–æ–º –∏ –æ–ø–ª–∞—Ç–æ–π
payment_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º")]
    ],
    resize_keyboard=True
)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥
async def set_bot_commands():
    commands = [
        types.BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ üîç"),
        types.BotCommand(command="help", description="–ü–æ–º–æ—â—å üöë"),
        types.BotCommand(command="buy", description="–ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫üèÜ"),
    ]
    await bot.set_my_commands(commands)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏—Ç–Ω–µ—Å-–±–æ—Ç. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=main_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –∏ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
@dp.message(Command("help"))
@dp.message(lambda message: message.text == "‚ùì –ü–æ–º–æ—â—å")
async def help_handler(message: types.Message):
    await message.answer("–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ –º–Ω–µ –≤ Telegram: [@Guts_berserk_griffith](https://t.me/Guts_berserk_griffith)", parse_mode="Markdown", reply_markup=main_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"
@dp.message(Command("buy"))
@dp.message(lambda message: message.text == "–ö—É–ø–∏—Ç—å –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫üéÅ")
async def buy_handler(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã:", reply_markup=buy_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
@dp.message()
async def message_handler(message: types.Message):
    if message.text == "–°–æ–≤–µ—Ç—ã –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–ºü•ä":
        await message.answer("–û—Ç–¥—ã—Ö –º–µ–∂–¥—É –ø–æ–¥—Ö–æ–¥–∞–º–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 3 –º–∏–Ω—É—Ç—ã!")
        await message.answer("–ï—Å–ª–∏ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É, —Ç–æ –ª—É—á—à–µ –ø–æ–¥–æ–π–¥–∏ –∫ –ª—é–¥—è–º –∏–∑ –∑–∞–ª–∞!")
        await message.answer("–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∏—Ç—å—Å—è –±–æ–ª—å—à–∏—Ö —Ü–µ–ª–µ–π, —Ç–æ —Å–æ–≤–µ—Ç—É—é –∫—É–ø–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!")

    elif message.text == "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ –º–∞—Å—Å—É üí™":
        await message.answer("üî• –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ –º–∞—Å—Å—É:\nüíµ –¶–µ–Ω–∞: 7 000 —Ç–µ–Ω–≥–µ.\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π: [@Guts_berserk_griffith](https://t.me/Guts_berserk_griffith)", parse_mode="Markdown", reply_markup=payment_keyboard)

    elif message.text == "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ —Ä–µ–ª—å–µ—Ñ üî•":
        await message.answer("üî• –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ —Ä–µ–ª—å–µ—Ñ:\nüíµ –¶–µ–Ω–∞: 7 000 —Ç–µ–Ω–≥–µ.\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π: [@Guts_berserk_griffith](https://t.me/Guts_berserk_griffith)", parse_mode="Markdown", reply_markup=payment_keyboard)

    elif message.text == "–ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∏—Ç–∞–Ω–∏—èü•¨":
        await message.answer("–ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∏—Ç–∞–Ω–∏—èü•¨:\nüíµ –¶–µ–Ω–∞: 12 000 —Ç–µ–Ω–≥–µ.\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π: [@Guts_berserk_griffith](https://t.me/Guts_berserk_griffith)", parse_mode="Markdown", reply_markup=payment_keyboard)

    elif message.text == "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥ üèÉ":
        await message.answer("üî• –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥:\nüíµ –¶–µ–Ω–∞: 10 000 —Ç–µ–Ω–≥–µ.\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π: [@Guts_berserk_griffith](https://t.me/Guts_berserk_griffith)", parse_mode="Markdown", reply_markup=payment_keyboard)

    elif message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É:", reply_markup=buy_keyboard)

    elif message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_keyboard)

    elif message.text.lower() == "—Å–ø–∞—Å–∏–±–æ":
        await message.answer("–ù–µ –∑–∞ —á—Ç–æ, –æ–±—Ä–∞—â–∞–π—Å—è! üòä")

    else:
        await message.answer("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π /help.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    await set_bot_commands()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())